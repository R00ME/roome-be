name: Deploy to EC2

on:
  push:
    branches: [ dev ]  # dev 브랜치에 push가 발생하면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Create .env file
        run: |
          cd roome
          touch .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
          echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> .env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> .env
      #          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env
      #          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env
      #          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
      #          echo "CLOUD_AWS_ENDPOINT_URI=${{ secrets.CLOUD_AWS_ENDPOINT_URI }}" >> .env

      - name: Grant execute permission for gradlew
        run: |
          cd roome
          chmod +x gradlew

      - name: Build with Gradle
        run: |
          cd roome
          ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./roome
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/roome:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/roome:latest
            docker stop roome || true
            docker rm roome || true
#           사용하지 않는 컨테이너, 이미지 등을 정리
            docker system prune -f  
            docker run -d --name roome -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/roome:latest