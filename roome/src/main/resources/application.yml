spring:
  profiles:
    active: test
  config:
    import: optional:file:.env[.properties]
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
          kakao:
            client-name: Kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
              - profile_image
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jwt:
    secret: ${JWT_SECRET}

server:
  shutdown: graceful

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}  # 월요일에 발급받을 액세스 키
      secret-key: ${AWS_SECRET_KEY}  # 월요일에 발급받을 시크릿 키
    s3:
      bucket: ${AWS_BUCKET_NAME} # 월요일 설정
    region:
      static: ap-northeast-2  # 서울 리전
    stack:
      auto: false
    endpoint:
        uri: ${CLOUD_AWS_ENDPOINT_URI} # 재설정 필요

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/roome
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
---
---
spring:
  config:
    activate:
      on-profile: test
  jwt:
    secret: ebe1d0e205c1ee44b8e1937f6baed2b069774d7c52fc1c7db419ff850148db89  # .env 파일의 값을 직접 넣어줍니다
    access-token:
      expiration-time: 3600000  # 1시간
    refresh-token:
      expiration-time: 1209600000  # 14일
      expiration-time-seconds: 1209600  # 쿠키용 (초 단위)

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:roome;MODE=MySQL
    username: sa
    password:
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}
      password: ${REDIS_PASSWORD}