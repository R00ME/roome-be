spring:
  profiles:
    default: prod
  config:
    import: optional:file:.env[.properties]
  autoconfigure:
    exclude:
      - io.awspring.cloud.autoconfigure.s3.S3AutoConfiguration
  servlet:
    multipart:
      max-file-size: 6MB
      max-request-size: 6MB

  security:
    oauth2:
      client:
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "https://roome.io.kr/login/oauth2/code/google"
            scope: [email, profile]
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "https://roome.io.kr/login/oauth2/code/naver"
            scope: [name, email, profile_image]
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "https://roome.io.kr/login/oauth2/code/kakao"
            scope: [profile_nickname, profile_image, account_email]

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    properties:
      hibernate:
        connection:
          characterEncoding: utf8mb4
          useUnicode: true
        format_sql: false
        dialect: org.hibernate.dialect.MariaDBDialect

# jwt 접두사는 코드(@ConfigurationProperties) 기준에 맞춰 조정하세요.
jwt:
  secret: ${JWT_SECRET}

server:
  forward-headers-strategy: framework
  shutdown: graceful

  mvc:
    cors:
      mappings:
        - path-pattern: /api/**
          allowed-origins:
            - https://roome.io.kr
            - https://dev.roome.io.kr
            - http://localhost:5173
            - http://localhost:3000
          allowed-methods: [GET, POST, PUT, PATCH, DELETE, OPTIONS]
          allowed-headers: ["*"]
          allow-credentials: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: ${AWS_BUCKET_NAME}
    region:
      static: ap-northeast-2

aladin:
  api:
    key: ${ALADIN_SECRET_LOCAL}

app:
  oauth2:
    redirectUris: http://localhost:5173,https://dev.roome.io.kr,https://roome.io.kr

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, metrics
  metrics:
    tags:
      application: frontoffice

---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${LOCAL_DATASOURCE_URL}
    username: ${LOCAL_DATASOURCE_USERNAME}
    password: ${LOCAL_DATASOURCE_PASSWORD}
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100

#app:
#  oauth2:
#    redirectUri: http://localhost:5173

aladin:
  api:
    key: ${ALADIN_SECRET_LOCAL}

---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

#app:
#  oauth2:
#    redirectUri: https://dev.roome.io.kr

aladin:
  api:
    key: ${ALADIN_SECRET_DEV}

---

spring:
  config:
    activate:
      on-profile: prod
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: "https://www.roome.io.kr/login/oauth2/code/google"
          naver:
            redirect-uri: "https://www.roome.io.kr/login/oauth2/code/naver"
          kakao:
            redirect-uri: "https://www.roome.io.kr/login/oauth2/code/kakao"
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

#app:
#  oauth2:
#    redirectUri: https://roome.io.kr

aladin:
  api:
    key: ${ALADIN_SECRET_PROD}

# 필요 시 test 프로필은 별도 파일(application-test.yml) 또는 아래 주석 해제
# ---
# spring:
#   config:
#     activate:
#       on-profile: test
#   jpa:
#     hibernate:
#       ddl-auto: create-drop
#     show-sql: true
#     properties:
#       hibernate:
#         format_sql: true
